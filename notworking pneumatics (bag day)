/*----------------------------------------------------------------------------*/
/* Copyright (c) 2017-2018 FIRST. All Rights Reserved.                        */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

//All code is important, do not delete!

package org.usfirst.frc.team3352.robot;

import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

/*****************************************************************************
 * ***************************************************************************
 * What Works:
 * Drive
 * Intake
 * 
 * What Doesn't:
 * 
 * 
 * Untested:
 * 
 * 
 * Notes:
 * test program for intake and drive, nothing is final, demo code only.
 * 
 * Things that need to be done:
 * 
 * Literally everything.
 * 
 *****************************************************************************
 ****************************************************************************/


public class Robot extends IterativeRobot {
	private DifferentialDrive m_myRobot;
	Joystick driveStick = new Joystick(0);      
	Joystick operatorStick = new Joystick(1);

	   /*********************************************
	    * variables
	    ********************************************/
		
	
	
	   /*********************************************
	    * peumatics
	    ********************************************/
	Solenoid s1 = new Solenoid(1);
	Solenoid s2 = new Solenoid(2);
	
	   /*********************************************
	    * lift/intake
	    ********************************************/
	   WPI_TalonSRX m_intake = new WPI_TalonSRX(9);
	   //WPI_TalonSRX m_intakeL = new WPI_TalonSRX(8);
	   WPI_TalonSRX m_lift = new WPI_TalonSRX(10);
	   WPI_TalonSRX m_climb = new WPI_TalonSRX(7);
	   
	   /*********************************************
	    * Right Side
	    ********************************************/
	   WPI_TalonSRX m_frontright = new WPI_TalonSRX(1);
	   WPI_TalonSRX m_midright = new WPI_TalonSRX(2);
	   WPI_TalonSRX m_rearright = new WPI_TalonSRX(3);
	  
	   /*********************************************
	    * Left Side
	    ********************************************/
	   WPI_TalonSRX m_frontleft = new WPI_TalonSRX(4);
	   WPI_TalonSRX m_midleft = new WPI_TalonSRX(5);
	   WPI_TalonSRX m_rearleft = new WPI_TalonSRX(6);
	   
	   /*********************************************
	    * speed controller groups
	    ********************************************/
	   SpeedControllerGroup m_right = new SpeedControllerGroup(m_frontright, m_rearright, m_midright);
	   SpeedControllerGroup m_left = new SpeedControllerGroup(m_frontleft, m_rearleft, m_midleft);
	   
		   
	
	@Override
	public void robotInit() {
		m_myRobot = new DifferentialDrive(m_right, m_left);


		  
	}
;

	@Override
	public void teleopPeriodic() {
		m_myRobot.tankDrive(driveStick.getRawAxis(5), driveStick.getRawAxis(1));
		m_intake.set(operatorStick.getRawAxis(1));
		
		if (driveStick.getRawButton(1)) {
			s2.set(true);
			s1.set(true);
		}
		else{
			s1.set(false);
			s2.set(false);
		}
		

		
	}
}
